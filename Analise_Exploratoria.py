from previsao_vendas import preco_info,df_anuncios
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd  # Importa칞칚o de pandas estava faltando

# Fun칞칚o para converter pre칞os para n칰mero
def converter_preco(preco):
    if isinstance(preco, str):
        return int(preco.replace("R$", "").replace(".", "").replace(",", "").strip())
    return preco

# Garantir que preco_info cont칠m a chave "price"
if "price" in preco_info:
    preco_fipe = converter_preco(preco_info["price"]) / 100  # Corrigir escala
else:
    raise KeyError("A chave 'price' n칚o foi encontrada em preco_info.")

# Verificar se df_anuncios est치 definido antes de us치-lo
if 'df_anuncios' not in globals():
    raise NameError("A vari치vel df_anuncios n칚o est치 definida. Certifique-se de carreg치-la corretamente.")

def buscar_link():
    for link in df_anuncios["Link"]:
        print(link)
# Criar DataFrame corrigido
df_precos = pd.DataFrame({
    "Fonte": ["FIPE"] + ["Mercado Livre"] * len(df_anuncios),
    "Pre칞o (R$)": [preco_fipe] + df_anuncios["Pre칞o (R$)"].apply(converter_preco).tolist()
})

# Exibir estat칤sticas descritivas corrigidas
print("\n游늵 Estat칤sticas descritivas dos pre칞os (corrigidas):")
print(df_precos.groupby("Fonte")["Pre칞o (R$)"].describe())

# Criar gr치fico de compara칞칚o
plt.figure(figsize=(8, 5))
sns.boxplot(x="Fonte", y="Pre칞o (R$)", data=df_precos, palette="coolwarm")
plt.title("游늳 Compara칞칚o de Pre칞os - FIPE vs Mercado Livre")
plt.ylabel("Pre칞o (R$)")
plt.xlabel("Fonte")
plt.grid(True)
plt.show()

